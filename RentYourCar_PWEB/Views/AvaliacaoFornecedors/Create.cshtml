<style>
    .slidecontainer {
        width: 100%;
    }

    .slider {
        -webkit-appearance: none;
        width: 100%;
        height: 5px;
        border-radius: 5px;
        background: #d3d3d3;
        outline: none;
        opacity: 0.7;
        -webkit-transition: .2s;
        transition: opacity .2s;
    }

        .slider:hover {
            opacity: 1;
        }

        .slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            width: 20px;
            height: 20px;
            background: #033c73;
            cursor: pointer;
            border-radius: 50%;
        }

        .slider::-moz-range-thumb {
            width: 20px;
            height: 20px;
            background: #033c73;
            cursor: pointer;
            border-radius: 50%;
        }

    span {
        margin-left: 5px;
    }
</style>

@model RentYourCar_PWEB.Models.AvaliacaoFornecedor

@{
    ViewBag.Title = "Avaliar Fornecedor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="page-header">Avaliar o fornecedor @Model.Aluguer.Veiculo.User.Nome</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Rapidez, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rapidez, new { htmlAttributes = new { @class = "slider", Type = "range", min = "1", max = "5", id = "RapidezSlider" } })
                <span class="control-label h3" id="RapidezValue"></span>
                @Html.ValidationMessageFor(model => model.Rapidez, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Simpatia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Simpatia, new { htmlAttributes = new { @class = "slider", Type = "range", min = "1", max = "5", id = "SimpatiaSlider" } })
                <span class="control-label h3" id="SimpatiaValue"></span>
                @Html.ValidationMessageFor(model => model.Simpatia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comentario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comentario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comentario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Avaliar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {

    <script>
        var slider0 = document.getElementById("RapidezSlider");
        var output0 = document.getElementById("RapidezValue");
        output0.innerHTML = slider0.value;

        slider0.oninput = function () {
            output0.innerHTML = this.value;
        }
    </script>
    <script>
        var slider1 = document.getElementById("SimpatiaSlider");
        var output1 = document.getElementById("SimpatiaValue");
        output1.innerHTML = slider1.value;

        slider1.oninput = function () {
            output1.innerHTML = this.value;
        }
    </script>
}
